---
version: 2.1

jobs:
  build:
    machine:
      # https://circleci.com/developer/machine/image/ubuntu-2204
      image: ubuntu-2204:2022.10.2

    steps:
    - checkout
    - restore_cache:
        keys:
        - my_cache

    - run:
        name: Get test data
        command: |
          if [[ ! -d ~/data/ds003_downsampled ]]; then
              wget -c --no-check-certificate -O ${HOME}/ds003_downsampled_v2.tar "https://osf.io/8s29u/download" && \
              mkdir -p ${HOME}/data && \
              tar xf ${HOME}/ds003_downsampled_v2.tar -C ${HOME}/data;
          fi

    - run:
        name: Build Docker image
        command: |
          if [[ -e ${HOME}/docker/image.tar ]]; \
            then docker load -i ${HOME}/docker/image.tar;
          fi
          git describe --tags --always > version
          docker build -t bids/${CIRCLE_PROJECT_REPONAME,,} .
          mkdir -p ${HOME}/docker
          docker save "bids/${CIRCLE_PROJECT_REPONAME,,}" > ${HOME}/docker/image.tar

    - save_cache:
        key: my_cache
        paths:
        - ~/docker
        - ~/data

    - persist_to_workspace:
        root: /home/circleci
        paths:
        - data/ds003_downsampled_v2
        - docker/image.tar

  test:
    machine:
      image: ubuntu-2204:2022.10.2

    parameters:
      participant:
        type: string

    steps:
    - attach_workspace:
        at: /tmp/workspace
    - run: docker load -i /tmp/workspace/image.tar

    - run: mkdir -p ${HOME}/outputs-colin
    - run: mkdir -p ${HOME}/outputs-colin-labelmask

    - run:
        name: print version
        command: |
          docker run -ti --rm --read-only \
            -v ${HOME}/data/ds003_downsampled:/bids_dataset \
              bids/${CIRCLE_PROJECT_REPONAME,,} --version

    - run:
        name: template level run for downsampled dataset no masking
        command: |
          docker run -ti --rm --read-only \
            -v ${HOME}/data/ds003_downsampled:/bids_dataset \
            -v ${HOME}/outputs-colin:/outputs \
            bids/${CIRCLE_PROJECT_REPONAME,,} \
            --n_cpus 2 --segmentation_type colin27-subcortical \
            /bids_dataset /outputs participant1 --participant_label << parameters.participant >>
        no_output_timeout: 6h

    - run:
        name: participant level tests for a longitudinal dataset no masking
        command: |
          docker run -ti --rm --read-only \
            -v ${HOME}/data/ds003_downsampled:/bids_dataset \
            -v ${HOME}/outputs-colin:/outputs \
            bids/${CIRCLE_PROJECT_REPONAME,,} \
            --n_cpus 2 --segmentation_type colin27-subcortical \
            /bids_dataset /outputs participant2 --participant_label << parameters.participant >>
        no_output_timeout: 6h

    - run:
        name: template level run for downsampled dataset with masking
        command: |
          docker run -ti --rm --read-only \
            -v ${HOME}/data/ds003_downsampled:/bids_dataset \
            -v ${HOME}/outputs-colin-labelmask:/outputs \
            bids/${CIRCLE_PROJECT_REPONAME,,} \
            --n_cpus 2 --label-masking --segmentation_type colin27-subcortical \
            /bids_dataset /outputs participant1 --participant_label << parameters.participant >>
        no_output_timeout: 6h

    - run:
        name: participant level tests for a longitudinal dataset with masking
        command: |
          docker run -ti --rm --read-only \
            -v ${HOME}/data/ds003_downsampled:/bids_dataset \
            -v ${HOME}/outputs-colin-labelmask:/outputs \
            bids/${CIRCLE_PROJECT_REPONAME,,} \
            --n_cpus 2 --label-masking --segmentation_type colin27-subcortical \
            /bids_dataset /outputs participant2 --participant_label << parameters.participant >>
        no_output_timeout: 6h

  deploy:

    machine:
      image: ubuntu-2204:2022.10.2

    steps:
    - attach_workspace:
        at: /tmp/workspace

    - run: docker load -i /tmp/workspace/docker/image.tar
    - run:
        name: push to dockerhub
        command: |
          if [[ -n "$DOCKER_PASS" ]]; then
            echo "${DOCKER_PASS}" | docker login -u ${DOCKER_USER} --password-stdin && \
            docker push bids/${CIRCLE_PROJECT_REPONAME}:unstable
            if [[ -n "${CIRCLE_TAG}" ]]; then
              docker push bids/${CIRCLE_PROJECT_REPONAME}:latest
              docker tag bids/${CIRCLE_PROJECT_REPONAME} bids/${CIRCLE_PROJECT_REPONAME}:$CIRCLE_TAG
              docker push bids/${CIRCLE_PROJECT_REPONAME}:$CIRCLE_TAG;
            fi
          fi


workflows:
  build-test-deploy:
    jobs:
    - build
    - test:
        requires:
        - build
        matrix:
          parameters:
            participant: ['01', '02']
    - deploy:
        requires:
        - test
        filters:
          tags:
            only: /.*/
# VS Code Extension Version: 1.5.1
